using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;

/// <summary>
/// Controls the behaviour of stars that can be picked up by the player to increase their money ie. stars.
/// These stars are generated by the trophy defender.
/// </summary>
public class Star : MonoBehaviour
{
    // Constants
    const float MAX_X = 9f;
    const float MIN_X = 3f;
    const float MAX_Y = 5f;
    const float MIN_Y = 1f;
    const float INITIAL_SPEED = 2f;
    const float PICKUP_SPEED = 20f;
    readonly Vector2 finalTargetPos = new Vector2(9.94f, 5.93f);

    // Configuration parameters
    [SerializeField] int starsToAdd = 50;

    // State variables
    bool moveStar = false;
    float starSpeed;
    Vector2 targetPos;
    Collider colliderComponent;
    
    /// <summary>
    /// Called by Unity when the game object this script is attached to is first instantiated.
    /// The attached collider component for the player to pickup this star is disabled until
    /// the star's spawn animation is fully played. The method also determines a random location
    /// within the play space for the star to move toward once spawned.
    /// </summary>
    private void Start()
    {
        colliderComponent = GetComponent<BoxCollider>();
        colliderComponent.enabled = false;

        starSpeed = INITIAL_SPEED;

        // Dimensions of the play space
        float xPos = Random.Range(MIN_X, MAX_X);
        float yPos = Random.Range(MIN_Y, MAX_Y);
        targetPos = new Vector2(xPos, yPos);
    }

    /// <summary>
    /// Called by Unity once per frame. Translates the star accross the screen to the target
    /// position specified in state variables. Once the star reaches the final target position,
    /// it is destroyed.
    /// </summary>
    private void Update()
    {
        if (moveStar)
        {
            float step = starSpeed * Time.deltaTime;
            transform.position = Vector3.MoveTowards(transform.position, targetPos, step);

            // If the star has reached its initial random resting position within the game area
            if (Vector3.Distance(transform.position, targetPos) < Mathf.Epsilon)
            {
                moveStar = false;
            }
            // If the star has completed its pickup animation
            if (Vector3.Distance(transform.position, finalTargetPos) < Mathf.Epsilon)
            {
                Destroy(gameObject);
            }
        }
    }

    /// <summary>
    /// Called by Unity when the mouse cursor moves over the collider component attached to
    /// this game object. Sets the new target position and star speed.
    /// </summary>
    private void OnMouseOver()
    {
        FindObjectOfType<StarDisplay>().AddStars(starsToAdd);
        colliderComponent.enabled = false;
        targetPos = finalTargetPos;
        starSpeed = PICKUP_SPEED;
        moveStar = true;
    }

    /// <summary>
    /// Begins the star's movement and enables collision detection so the player can pickup
    /// the star.
    /// </summary>
    public void MoveStar()
    {
        moveStar = true;
        colliderComponent.enabled = true;
    }
}
